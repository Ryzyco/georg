; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init {:file "riemann.log"})

; Listen on the local interface over TCP (5555), UDP (5555), and websockets(5556)
(let [host "127.0.0.1"]
  (tcp-server {:host host})
  (udp-server {:ho 
  (ws-server  {:host host}))


(defn handle-uncaught-exception [event] (
    ;add call to pagerduty
    ))

(defn handle-latency-recording [event] ( 
  (logstash {:host "127.0.0.1" :port 5000}) ;how to find the address of the server when its not in localhost?
  (fixed-time-window 3600
    (smap (fn [events]
      (let [percentage (/ (count (filter #(or (> (:metric %) latency-failure-threshold) (= (:state %) "Failure")) events))
                          (count events))]
        (where (> perecentage 0.02)
          ;add call to pagerduty
          )))))))
           


; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(let [index (index)]
  ; Inbound events will be passed to these streams:
  (streams
    (tagged "georg"
      #(info "received event" %)
      (tagged "uncaught-exception" #(handle-uncaught-exception %))
      (tagged "latency"            #(handle-latency-recording %))
      )))
